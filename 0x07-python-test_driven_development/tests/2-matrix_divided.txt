Module name: 
============
2-matrix_divided

Description
===========
Contains a function matrix_divided() that divides all elements of a matrix
Matrix must be a matrix (list of lists) of integers/floats
Quotients are rounded to maximum of 2 decimal digits

Usage
=====
function returns a new matrix with all elements divided by div

Test cases
==========

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...		[1, 2, 3],
...		[4, 5, 6]
...		]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

An empty list of lists will succeed
===================================
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 3))
[[]]

Invalid matrices
================
1. An empty list will raise a TypeError
====================================

>>> matrix = []
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
	
2. The parameter `div` must be either an int or float otherwise a TypeError is raised
=============================================================

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> print(matrix_divided(matrix, "not a number"))
Traceback (most recent call last):
TypeError: div must be a number

3. Rows in matrix must be same size otherwise a TypeError is raised
=============================================================

>>> matrix = [
...     [1, 2, 3, 4],
...     [5, 6, 7]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

4. `div` must be non-zero, otherwise, a ZeroDivisionError
=========================================================

>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
ZeroDivisionError: division by zero

5. TypeError is raised if any element in matrix is neither int nor float
=============================================================

>>> matrix = [
...     [1, 2, 3],
...     [4, "not a number", 6]
... ]
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

6. Matrix is a string
=====================

>>> matrix = "not a list"
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

7. Matrix = None
================

>>> matrix = None
>>> print(matrix_divided(matrix, 3))
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
